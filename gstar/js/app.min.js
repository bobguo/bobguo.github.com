/**
 * Github Star Tagger
 * 
 * @see https://github.com/ockle/github-star-tagger
 * @version 1.0.0
 * @author github.com/ockle
 * @license MIT
 */
angular.module("githubStarTagger",["githubStarTagger.controllers","githubStarTagger.directives","githubStarTagger.filters","githubStarTagger.services","ui.bootstrap"]),angular.module("githubStarTagger.controllers",[]).controller("starsController",["$scope","$modal","GitHubAPI",function(a,b,c){a.stars=[],a.searchText="",a.filterLanguage=null,a.availableLanguages=[],a.allTags=[],a.filterTags=[],a.sortOrder="+index",a.settingsModal=null,a.username="",a.currentPage=1,a.starsPerPage=20,a.loading=!1,a.usernameError=!1,a.allUsernames=[],a.init=function(){if(localStorage.length>0){a.username=localStorage.currentUsername;var b=a.loadUserData(a.username);a.stars=b.stars,a.availableLanguages=b.availableLanguages;for(key in localStorage)"currentUsername"!==key&&a.allUsernames.push(key)}else a.loading=!0,a.settings()},a.$watch("stars",function(){if(!a.loading){a.saveUserData();var b=[];angular.forEach(a.stars,function(a){angular.forEach(a.tags,function(a){-1===b.indexOf(a)&&b.push(a)})}),a.allTags=b.sort()}},!0),a.toggleTagFilter=function(b){var c=a.filterTags.indexOf(b);-1===c?a.filterTags.push(b):a.filterTags.splice(c,1)},a.saveUserData=function(){var b={availableLanguages:a.availableLanguages,stars:a.stars};localStorage[a.username]=angular.toJson(b)},a.loadUserData=function(a){return"undefined"!=typeof localStorage[a]?JSON.parse(localStorage[a]):[]},a.settings=function(){a.settingsModal=b.open({templateUrl:"templates/modal.html",scope:a,size:"sm"})},a.loadStars=function(b){return 0==b.length?void(a.usernameError="Please enter a username"):(a.settingsModal.close(),a.loading=!0,a.usernameError=!1,a.username=b,void c.setUsername(b).getAllStars().then(function(c){localStorage.currentUsername=b,a.availableLanguages=[];var d=a.loadUserData(b).stars||[];angular.forEach(c,function(b,c){var e=b.language||"N/A";-1===a.availableLanguages.indexOf(e)&&a.availableLanguages.push(e);var f=!1;angular.forEach(d,function(a,e){a.full_name==b.full_name&&(f=!0,d[e].index=c)}),f||d.push({index:c,full_name:b.full_name,author:b.owner.login,name:b.name,description:b.description,searchableText:b.full_name+" "+b.description,language:b.language,url:b.html_url,tags:[]})}),angular.forEach(d,function(a,b){var e=!0;angular.forEach(c,function(b){a.full_name==b.full_name&&(e=!1)}),e&&d.splice(b,1)}),a.stars=d,a.saveUserData(),a.loading=!1},function(b){a.usernameError=b,a.settings()}))}}]),angular.module("githubStarTagger.directives",[]).directive("selectize",["$timeout",function(a){return{restrict:"A",require:"^ngModel",link:function(b,c,d,e){function f(a){return{text:a,value:a}}function g(b,c){a(function(){b!=c&&(angular.forEach(b,function(a){i.addOption(f(a))}),angular.forEach(c,function(a){-1===b.indexOf(a)&&i.removeOption(a)}))})}var h=b.$eval(d.selectize);h.options=b.$eval(d.options),h.options=h.options.map(f),h.create=f,c.selectize(h);var i=c[0].selectize;b.$watch(d.options,g,!0),b.$watch(function(){return e.$modelValue},function(b,c){g(b,c),a(function(){i.setValue(b)})},!0)}}}]),angular.module("githubStarTagger.services",[]).factory("GitHubAPI",["$http","$q",function(a,b){var c=function(){};return c.prototype={setUsername:function(a){return this.username=a,this},getAllStars:function(){var a=this;return this.getStarsPage(1).then(function(c){if(!c.headers.link)return c.data;for(var d=c.data,e=parseInt(a.parseLinksHeader(c.headers.link).last.match(/&page=([0-9]+)/)[1]),f=[],g=2;e>=g;g++)f.push(a.getStarsPage(g));return b.all(f).then(function(a){return angular.forEach(a,function(a){d.push.apply(d,a.data)}),d})})},getStarsPage:function(c){var d=b.defer();return a.get("https://api.github.com/users/"+this.username+"/starred",{params:{per_page:100,page:c,cache_buster:Math.random()}}).success(function(a,b,c){d.resolve({data:a,headers:c()})}).error(function(a,b){switch(b){case 403:d.reject("Github API rate limit reached");break;case 404:d.reject("Username not found")}}),d.promise},parseLinksHeader:function(a){var b=a.split(","),c={};return angular.forEach(b,function(a){var b=a.split(";"),d=b[0].replace(/<(.*)>/,"$1").trim(),e=b[1].replace(/rel="(.*)"/,"$1").trim();c[e]=d}),c}},new c}]),angular.module("githubStarTagger.filters",[]).filter("paginate",function(){return function(a,b,c){return a.slice((b-1)*c,b*c)}}).filter("languageFilter",function(){return function(a,b){if(null===b)return a;var c=[];return b="N/A"==b?null:b,angular.forEach(a,function(a){a.language===b&&c.push(a)}),c}}).filter("tagFilter",function(){return function(a,b){if(0===b.length)return a;var c=[];return angular.forEach(a,function(a){a.tags.filter(function(a){return-1!==b.indexOf(a)}).length>0&&c.push(a)}),c}}),angular.module("githubStarTagger").run(["$templateCache",function(a){"use strict";a.put("templates/modal.html",'<div class="modal-header"><h3>Settings</h3></div><form class="modal-body"><div class="form-group" ng-class="{\'has-error\': usernameError, \'has-feedback\': usernameError}"><div class="input-group"><span class="input-group-addon"><i class="fa fa-github-alt"></i></span><input type="text" class="form-control" placeholder="Github username" ng-model="username" typeahead="username for username in allUsernames | filter:$viewValue"><span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="username = \'\'"><i class="fa fa-times"></i></button></span></div><i class="fa fa-exclamation-circle form-control-feedback" ng-show="usernameError"></i><p class="text-center text-danger" ng-show="usernameError">{{ usernameError }}</p></div></form><div class="modal-footer"><button type="button" class="btn btn-success" ng-click="loadStars(username)"><i class="fa fa-refresh"></i> Load from Github</button> <button type="button" class="btn" ng-click="settingsModal.close()"><i class="fa fa-times"></i> Cancel</button></div>')}]);